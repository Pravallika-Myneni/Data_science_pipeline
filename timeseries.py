# -*- coding: utf-8 -*-
"""Copy of Crime Rate Prediction using Facebook Prophet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fyOrzzJFaQ4W4yLOVEbf4D55ZQMts4t0
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px
from fbprophet import Prophet
import pandas as pd
import plotly.offline as py
import plotly.graph_objs as go
import datetime

# Helper Function that removes underscores
def column_name(column):
  return column.split('_', 1)[1].replace('_',' ').title()

# Helper function that determines the intended aggregation based on column name
def aggregation(ds_col):
  return ds_col.split('_', 1)[1].lower()


data =pd.read_csv('crime_merged.csv', index_col = [0]) 

df = data[['ID','Date','Primary Type','Location Description','Arrest','Domestic','Zipcode']]

df.Date = pd.to_datetime(df.Date,format = '%m/%d/%Y %I:%M:%S %p')
df.index = pd.DatetimeIndex(df.Date)

df_prophet = pd.DataFrame(df[df['Primary Type']=='BATTERY'].resample('M').size().reset_index())

df_prophet.columns =['Date','Crime Count']

df_prophet=df_prophet.rename(columns={'Date':'ds','Crime Count':'y'})

m = Prophet()
m.fit(df_prophet)


pred=m.make_future_dataframe(periods=12,freq='M')
forecast = m.predict(pred)


plot = px.line(forecast,x="ds",y="yhat")
print(df_prophet.columns)
# Lowercase the column names
# df.columns = [df_prophet.columns]
# Determine which is Y axis
y_col = 'y'
# Determine which is X axis
ds_col = 'ds'
# Determine what the aggregation is
# agg = aggregation(ds_col)
# Create the plotly figure
yhat = go.Scatter(
  x = forecast['ds'],
  y = forecast['yhat'],
  mode = 'lines',
  marker = {
    'color': '#3bbed7'
  },
  line = {
    'width': 3
  },
  name = 'Forecast',
)

yhat_lower = go.Scatter(
  x = forecast['ds'],
  y = forecast['yhat_lower'],
  marker = {
    'color': 'rgba(0,0,0,0)'
  },
  showlegend = False,
  hoverinfo = 'none',
)

yhat_upper = go.Scatter(
  x = forecast['ds'],
  y = forecast['yhat_upper'],
  fill='tonexty',
  fillcolor = 'rgba(231, 234, 241,.75)',
  name = 'Confidence',
  hoverinfo = 'none',
  mode = 'none'
)

actual = go.Scatter(
  x = df_prophet['ds'],
  y = df_prophet['y'],
  mode = 'markers',
  marker = {
    'color': '#fffaef',
    'size': 4,
    'line': {
      'color': '#000000',
      'width': .75
    }
  },
  name = 'Actual'
)

layout = go.Layout(
  yaxis = {
    'title': 'Crime Rate',
    'tickformat': format(y_col),
    'hoverformat': format(y_col)
  },
  hovermode = 'x',
  xaxis = {
    'title': 'date'
  },
  margin = {
    't': 20,
    'b': 50,
    'l': 60,
    'r': 10
  },
  legend = {
    'bgcolor': 'rgba(0,0,0,0)'
  }
)
data = [yhat_lower, yhat_upper, yhat, actual]

fig = dict(data = data, layout = layout)




st.plotly_chart(fig, use_container_width = True)

incident_option = st.selectbox("Type of Incident", tuple(set(df["Primary Type"])))
st.write(incident_option)

zipcode_option = st.selectbox("Area", tuple(set(df['Zipcode'])))
st.write(zipcode_option)

